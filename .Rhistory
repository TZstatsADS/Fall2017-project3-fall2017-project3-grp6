version
library("dplyr", lib.loc="~/anaconda3/lib/R/library")
library("ggplot2", lib.loc="~/anaconda3/lib/R/library")
library("Matrix", lib.loc="~/anaconda3/lib/R/library")
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
sift.features=read.csv("../data/sift_features.csv", header = T)
View(sift.features)
dim(sift.features)
lbp=read.csv("../data/lbp.csv", header = F)
label=read.csv("../data/labels.csv")
source("../lib/train.r")
source("../lib/test.r")
install.packages("gbm")
source("../lib/train.r")
library("gbm")
install.packages("gbm")
install.packages("~/Desktop/gbm_2.1.3.tar.gz", repos = NULL, type = "source")
library(gbm)
library(caret)
library(DMwR)
library(nnet)
library(randomForest)
library(e1071)
install.packages(e1071)
install.packages("e1071")
install.packages("gbm",repos = `http://cran.uk.r-project.org/src/contrib/PACKAGES')
)
)))
da.;'.CA
'
C A}
AZ
XCA'CD;'.C>C
">cdx"
/cz./V?>ZX.''
//
xz/
cA?
/
1``
/
1
`/`
install.packages("~/Desktop/gbm_2.1.3.tgz", repos = NULL, type = .Platform$pkgType)
source("../lib/train.r")
library("gbm")
install.packages("~/Desktop/gbm_2.1.3.tgz", repos = NULL, type = .Platform$pkgType)
library("gbm", lib.loc="~/anaconda3/lib/R/library")
source("../lib/train.r")
source("../lib/test.r")
all=data.frame(cbind(label,t(sift.features)))
all=data.frame(cbind(label,t(sift.features)))
set.seed(1)
set.seed(1)
test.index=sample(1:2000,400,replace=F)
colnames(all)[1]="y"
test.sift=all[test.index,]
test.x.sift=test.sift[,-1]
train.sift=all[-test.index,]
baseline.model=train.baseline(train.sift)
library(gbm)
library(caret)
library(DMwR)
library(nnet)
library(randomForest)
library(e1071)
train.baseline=function(train.data)
{
gbm1=gbm(y~.,data=train.data,dist="adaboost",n.tree = 400,shrinkage=0.1)
n=gbm.perf(gbm1)
return(list(gbm=gbm1,n=n))
}
install.packages("DMwR")
library(gbm)
library(caret)
library(DMwR)
library(nnet)
library(randomForest)
library(e1071)
train.baseline=function(train.data)
{
gbm1=gbm(y~.,data=train.data,dist="adaboost",n.tree = 400,shrinkage=0.1)
n=gbm.perf(gbm1)
return(list(gbm=gbm1,n=n))
}
install.packages("e1071")
install.packages('MMWr', dependencies = TRUE)
install.packages('DMwE', dependencies = TRUE)
install.packages('DMwR', dependencies = TRUE)
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
library("gbm", lib.loc="~/anaconda3/lib/R/library")
install.packages("DMwR")
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
source("http://bioconductor.org/biocLite.R")
biocLite("EBImage")
packages.used=c("gbm", "caret","DMwR" ,"nnet","randomForest","EBImage","e1071")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
install.packages("e1071", type ="source")
setwd("~/")
read.csv("lbp_feature.csv")
a = read.csv("lbp_feature.csv")
a = read.csv("lbp_feature.csv")
a
a = read.table("sampleList.txt")
View(a)
a = read.table("lbp_feature.txt")
a
a = read.table("lbp_feature.txt")
a = read.table("lbp_feature.txt")

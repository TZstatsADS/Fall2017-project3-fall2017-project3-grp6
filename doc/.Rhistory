<<<<<<< HEAD
feature <- function(img_dir, set_name, data_name="data", export=T){
### Construct process features for training/testing images
### Sample simple feature: Extract row average raw pixel values as features
### Input: a directory that contains images ready for processing
### Output: an .RData file contains processed features for the images
### load libraries
library("EBImage")
n_files <- length(list.files(img_dir))
### determine img dimensions
img0 <-  readImage(paste0(img_dir, "img", "_", data_name, "_", set_name, "_", 1, ".jpg"))
mat1 <- as.matrix(img0)
n_r <- nrow(img0)
### store vectorized pixel values of images
dat <- matrix(NA, n_files, n_r)
for(i in 1:n_files){
img <- readImage(paste0(img_dir,  "img", "_", data_name, "_", set_name, "_", i, ".jpg"))
dat[i,] <- rowMeans(img)
}
### output constructed features
if(export){
save(dat, file=paste0("../output/feature_", data_name, "_", set_name, ".RData"))
}
return(dat)
}
train <- function(dat_train, label_train, par=NULL){
### Train a Gradient Boosting Model (GBM) using processed features from training images
### Input:
###  -  processed features from images
###  -  class labels for training images
### Output: training model specification
### load libraries
library("gbm")
### Train with gradient boosting model
if(is.null(par)){
depth <- 3
} else {
depth <- par$depth
}
fit_gbm <- gbm.fit(x=dat_train, y=label_train,
n.trees=2000,
distribution="bernoulli",
interaction.depth=depth,
bag.fraction = 0.5,
verbose=FALSE)
best_iter <- gbm.perf(fit_gbm, method="OOB", plot.it = FALSE)
return(list(fit=fit_gbm, iter=best_iter))
}
test <- function(fit_train, dat_test){
### Fit the classfication model with testing data
### Input:
###  - the fitted classification model using training data
###  -  processed features from testing images
### Output: training model specification
### load libraries
library("gbm")
pred <- predict(fit_train$fit, newdata=dat_test,
n.trees=fit_train$iter, type="response")
return(as.numeric(pred> 0.5))
}
cv.function <- function(X.train, y.train, d, K){
n <- length(y.train)
n.fold <- floor(n/K)
s <- sample(rep(1:K, c(rep(n.fold, K-1), n-(K-1)*n.fold)))
cv.error <- rep(NA, K)
for (i in 1:K){
train.data <- X.train[s != i,]
train.label <- y.train[s != i]
test.data <- X.train[s == i,]
test.label <- y.train[s == i]
par <- list(depth=d)
fit <- train(train.data, train.label, par)
pred <- test(fit, test.data)
cv.error[i] <- mean(pred != test.label)
}
return(c(mean(cv.error),sd(cv.error)))
}
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("gbm")){
install.packages("gbm")
}
library("EBImage")
library("gbm")
setwd("./ads_spr2017_proj3")
setwd("~/Documents/GitHub/Fall2017-project3-fall2017-project3-grp6/doc")
experiment_dir <- "../data/zipcode/" # This will be modified for different data sets.
img_train_dir <- paste(experiment_dir, "train/", sep="")
img_test_dir <- paste(experiment_dir, "test/", sep="")
run.cv=TRUE # run cross-validation on the training set
K <- 5  # number of CV folds
run.feature.train=TRUE # process features for training set
run.test=TRUE # run evaluation on an independent test set
run.feature.test=TRUE # process features for test set
model_values <- seq(3, 11, 2)
model_labels = paste("GBM with depth =", model_values)
label_train <- read.table(paste(experiment_dir, "train_label.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "train_label.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "train_label.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "train_label.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "train_label.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "label_train.txt", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "label_train.txt", sep=""),
header=F)
a = paste(experiment_dir, "label_train.txt"
)
a
a = paste(experiment_dir, "label_train.txt", sep="")
a
label_train <- read.table(paste(experiment_dir, "label_train.txt", sep=""),
header=F)
=======
setwd("./ads_spr2017_proj3")
setwd("~/Documents/GitHub/Fall2017-project3-fall2017-project3-grp6/doc")
>>>>>>> 370a4bdb1b3a8c3cd7cf20b627474d3aee7e3d55
experiment_dir <- "../data/zipcode/" # This will be modified for different data sets.
img_train_dir <- paste(experiment_dir, "train/", sep="")
img_test_dir <- paste(experiment_dir, "test/", sep="")
model_values <- seq(3, 11, 2)
model_labels = paste("GBM with depth =", model_values)
label_train <- read.table(paste(experiment_dir, "label_train.csv", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "label_train.csv", sep=""),
header=F)
label_train <- read.table(paste(experiment_dir, "label_train.csv", sep=""),
header=F)
label_train <- as.numeric(unlist(label_train) == "9")
<<<<<<< HEAD
label_train <- read.table(paste(experiment_dir, "label_train.csv", sep=""),
header=F)
label_train <- as.numeric(unlist(label_train) == "9")
label_train <- read.table(paste(experiment_dir, "label_train.csv", sep=""),
header=F)
?read.table
=======
>>>>>>> 370a4bdb1b3a8c3cd7cf20b627474d3aee7e3d55
